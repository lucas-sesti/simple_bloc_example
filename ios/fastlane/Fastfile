default_platform(:ios)

platform :ios do
  desc "Automates deployment to TestFlight in the Flutter project"
  lane :beta do
    app_store_connect_api_key(
      key_id: ENV["ARTICLE_APPLE_AUTH_KEY_ID"],
      issuer_id: ENV["ARTICLE_APPLE_AUTH_KEY_ISSUER_ID"],
      key_filepath: "./fastlane/AuthKey.p8",
      duration: 1200,
      in_house: false
    )

    import_certificate(
      certificate_path: "./fastlane/DistributionCertificate.p12",
      certificate_password: ENV["ARTICLE_DISTRIBUTION_CERTIFICATE_PASSWORD"],
      keychain_name: "login", # default keychain of macos, if you want to use in github actions, you may need to create a temporary keychain and set as default
      keychain_password: ""
    )

    get_provisioning_profile(
      output_path: "./fastlane/profiles",
      filename: "appstore.mobileprovision",
      provisioning_name: "com.example.simpleBlocExample AppStore",
      ignore_profiles_with_different_name: true,
      app_identifier: "com.example.simpleBlocExample"
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      targets: ["Runner"],
      path: "Runner.xcodeproj",
      code_sign_identity: "iPhone Distribution",
      build_configurations: ['Release'],
      sdk: "iphoneos*",
      profile_name: "com.example.simpleBlocExample AppStore"
    )

    Dir.chdir "../.." do
      sh(
        "flutter",
        "build",
        "ipa",
        "--no-codesign"
      )
    end

    build_ios_app(
      workspace: "Runner.xcworkspace",
      configuration: "Release",
      scheme: "Runner",
      silent: true,
      clean: true,
      output_directory: "./fastlane/build",
      output_name: "app.ipa",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.example.simpleBlocExample" => "com.example.simpleBlocExample AppStore",
        }
      }
    )

    upload_to_testflight(
      ipa: "./fastlane/build/app.ipa",
      skip_submission: true,
      skip_waiting_for_build_processing: true,
    )
  end
end